// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VRGameDeals.Data.EF;

namespace VRGameDeals.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200210152416_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VRGameDeals.Data.Models.Discount", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GameGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformGameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Guid");

                    b.HasIndex("GameGuid");

                    b.HasIndex("PlatformGameId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("VRGameDeals.Data.Models.Game", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("26f2a34c-7f9f-40e6-aeca-6a875ace5be9"),
                            Description = "FPS Shooter",
                            Name = "Pavlov"
                        });
                });

            modelBuilder.Entity("VRGameDeals.Data.Models.Platform", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Guid");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("c4149c8f-b816-4c75-ae8d-94c9b7d18c9b"),
                            Description = "Mobile",
                            Name = "Oculus Quest"
                        });
                });

            modelBuilder.Entity("VRGameDeals.Data.Models.PlatformGame", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Guid");

                    b.HasIndex("GameId");

                    b.HasIndex("PlatformId");

                    b.ToTable("PlatformGame");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("12386a1d-6cb1-4502-bce4-f14afba68264"),
                            GameId = new Guid("26f2a34c-7f9f-40e6-aeca-6a875ace5be9"),
                            PlatformId = new Guid("c4149c8f-b816-4c75-ae8d-94c9b7d18c9b"),
                            Price = 99m,
                            ReleaseDate = new DateTime(2019, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("VRGameDeals.Data.Models.Discount", b =>
                {
                    b.HasOne("VRGameDeals.Data.Models.Game", null)
                        .WithMany("Discounts")
                        .HasForeignKey("GameGuid");

                    b.HasOne("VRGameDeals.Data.Models.PlatformGame", "PlatformGame")
                        .WithMany("Discounts")
                        .HasForeignKey("PlatformGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VRGameDeals.Data.Models.PlatformGame", b =>
                {
                    b.HasOne("VRGameDeals.Data.Models.Game", "Game")
                        .WithMany("Platforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VRGameDeals.Data.Models.Platform", "Platform")
                        .WithMany("Games")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
